#!/usr/bin/env bash
set -e -o pipefail

# Add repo specific metadata here.

BASE_IMAGE_CONFIG_KEY_PREFIX="BASE_IMAGE"

RELEASE_PACKAGE_NAME="Gitolite"
RELEASE_TAG_PACKAGE_NAME="gitolite"

UPSTREAM_PACKAGE_NAME="Gitolite"
UPSTREAM_VERSION_CONFIG_KEY="GITOLITE_VERSION"
UPSTREAM_GIT_REPO="https://github.com/sitaramc/gitolite"

TEST_TYPE="background"
TEST_CONTAINER_TYPE="gitolite"
TEST_CONTAINER_START_WAIT_SECONDS="10"

current_upstream_version() {
    get_config_arg ${UPSTREAM_VERSION_CONFIG_KEY:?}
}

latest_upstream_version() {
    git_remote_repo_latest_tag "${UPSTREAM_GIT_REPO:?}.git"
}

update_latest_upstream_version() {
    local cur_ver="${1:?}"
    local latest_ver="${2:?}"
    echo "Updating ${PACKAGE_NAME:?} ${UPSTREAM_VERSION_CONFIG_KEY:?} '${cur_ver:?}' -> '${latest_ver:?}'"
    set_config_arg "${UPSTREAM_VERSION_CONFIG_KEY:?}" "${latest_ver:?}"
    git add ${ARGS_FILE:?}
}

package_current_release_version() {
    current_upstream_version
}

test_start_container() {
    local container_name="${1:?}"
    local ssh_key_file="$(mktemp --dry-run)"
    ssh-keygen -t rsa -N "" -f "${ssh_key_file:?}" >/dev/null
    local ssh_pub_key="$(cat ${ssh_key_file:?}.pub)"
    rm ${ssh_key_file:?} ${ssh_key_file}.pub

    docker run \
        --name ${container_name:?} \
        --env "GITOLITE_ADMIN_USER=foobarbaz" \
        --env "GITOLITE_ADMIN_SSH_PUBLIC_KEY=${ssh_pub_key:?}" \
        --detach \
        --rm \
        ${IMAGE:?}
}

test_image_after_container_startup() {
    local container_name="${1:?}"
    test_tcp_endpoint \
        "${container_name:?}" \
        "$(container_ip "${container_name}")" \
        2222 \
        5 \
        '^SSH-2.0-OpenSSH_.+ Debian-.+$'
}
